{"version":3,"sources":["img/not-found-backdrop.jpg","redux/store.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","redux/auth/auth.reducers.js","utils/cookies.js","redux/errors/errors.reducers.js","redux/filters/filters.actions.js","redux/filters/filters.types.js","redux/filters/filters.reducers.js","redux/rootReducer.js","utils/validate.js","elements/CustomField/CustomField.jsx","components/Authorization/AuthorizationForm.jsx","components/Authorization/AuthorizationModal.jsx","theme/config.js","components/Authorization/Authorization.style.js","components/Authorization/Authorization.jsx","components/Header/Header.style.js","components/Header/Header.jsx","components/Sort/Sort.jsx","components/Pagination/Pagination.jsx","components/ReleaseYear/ReleaseYear.jsx","utils/apies.js","components/Genres/GenresItem.jsx","components/Genres/GenresList.jsx","components/ResetFilters/ResetFilters.jsx","components/Filters/Filters.jsx","utils/helpers/convertReleaseDate.js","components/Movies/MovieItem.jsx","elements/Loader/Loader.style.js","elements/Loader/Loader.jsx","components/Movies/MoviesList.jsx","pages/MoviesPage/MoviesPage.jsx","pages/MoviePage/MoviePageHeader.style.js","utils/helpers/addBorderForVoteAvarage.js","pages/MoviePage/MoviePageHeader.jsx","pages/MoviePage/MoviePageTrailers.style.js","pages/MoviePage/Player.style.js","pages/MoviePage/Player.jsx","pages/MoviePage/MoviePageTrailers.jsx","pages/MoviePage/MoviePage.jsx","App.jsx","index.js","img/not-found-poster.jpg"],"names":["module","exports","currentPage","createAction","initialState","user","favouriteMovies","watchList","isAuth","session_id","Cookies","get","authReducer","handleActions","UPDATE_AUTH","state","errorsReducer","onChangeFilters","name","value","resetFilters","sort_by","primary_release_year","Date","getFullYear","with_genres","page","total_pages","language","reducers","auth","filters","ON_CHANGE_FILTERS","store","payload","RESET_FILTERS","errors","form","formReducer","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","dispatch","getState","next","action","type","required","minLength","length","indentPassword","formState","repeatPassword","password","CustomField","props","input","label","meta","className","htmlFor","id","placeholder","touched","error","warning","AuthorizationForm","handleSubmit","onSubmit","Field","component","validate","reduxForm","AuthorizationModal","modal","toggle","Modal","isOpen","ModalBody","defaultProps","theme","AuthButton","styled","button","right","AuthButtonLink","a","Authorization","useState","setModal","onClick","href","rel","target","HeaderWrapper","div","HeaderContainer","HeaderTitleContainer","HeaderTitle","p","HeaderSubTitle","span","HeaderWithMovieDbApi","HeaderAuthorizationWrapper","Header","to","sortByOptions","Sort","useSelector","useDispatch","onChange","e","map","option","key","Pagination","handleChange","disabled","Number","years","currentYear","Array","from","index","getYears","ReleaseYear","year","API_URL","API_KEY_MOVIE_DB_V3","GenresItem","genre","checked","indexOf","String","GenresList","genres","setGenres","useEffect","axios","then","data","catch","console","log","updateGenres","filter","ResetFilters","preventDefault","Filters","convertReleaseDate","releaseDate","date","setDate","getDate","MovieItem","movie","src","poster_path","defaultPoster","alt","vote_average","substr","title","release_date","LoaderWrapper","Loader","Spinner","color","MoviesList","movies","setMovies","params","queryString","stringify","api_key","results","MoviesPage","MovieHeader","MovieHeaderBackground","MovieHeaderBackgroundImage","img","MovieHeaderSingleBlock","MovieHeaderContainer","MovieHeaderPoster","MovieHeaderPosterImage","MovieHeaderDescription","MovieHeaderTitle","h2","MovieHeaderTagLine","MovieHeaderVoteAvarageContainer","MovieHeaderVoteAvarage","voteAvarage","addBorderForVoteAvarage","vote_avarage","MovieHeaderVoteAvarageText","MovieHeaderParagraph","MovieHeaderBoldTest","MovieHeaderOverviewTitle","h4","MovieHeaderOverview","tagline","getValueFromArray","arr","resultArr","forEach","item","push","getBackgropImage","backdrop_path","defaultBackdropImage","path","belongs_to_collection","MoviePageHeader","defaultPosterImage","status","join","original_language","production_companies","production_countries","overview","TrailersWrapper","TrailersContainer","TrailersTitle","FlexWrapper","CurrentTrailerWrapper","trailersLength","TrailersList","IframeListItemWrapper","IframeListItem","iframe","IrameListItemOverBlock","LoadMore","PlayerContainer","Player","readyTrailer","setReadyTrailer","autoplay","window","YT","loadVideo","tag","document","createElement","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","videoId","width","height","host","playerVars","origin","location","iv_load_policy","enablejsapi","loop","playlist","modestbranding","showinfo","events","onReady","onPlayerReady","MoviePageTrailers","movie_id","trailers","setTrailers","activeTrailer","setActiveTrailer","availableTrailers","setavailableTrailers","all","warn","currentTrailer","trailer","trailersList","frameBorder","allow","allowFullScreen","MoviePage","setMovie","match","App","basename","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aa43439c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found-backdrop.3ebae8b0.jpg\";","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { ON_CHANGE_FILTERS } from \"./filters/filters.types\";\r\n\r\nlet currentPage;\r\n\r\nconst onChangePageMiddleware = ({ dispatch, getState }) => (next) => (\r\n  action\r\n) => {\r\n  currentPage = getState().filters.page;\r\n  if (\r\n    action.type === ON_CHANGE_FILTERS &&\r\n    action.payload.name !== \"page\" &&\r\n    currentPage !== 1\r\n  ) {\r\n    dispatch({\r\n      type: ON_CHANGE_FILTERS,\r\n      payload: {\r\n        name: \"page\",\r\n        value: 1,\r\n      },\r\n    });\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk, onChangePageMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import { createAction } from \"redux-actions\";\r\nimport * as types from \"./auth.types\";\r\n\r\nexport const updateAuth = createAction(types.UPDATE_AUTH);\r\n","export const UPDATE_AUTH = \"UPDATE_AUTH\";\r\n","import { handleActions } from \"redux-actions\";\r\nimport { cookies } from \"../../utils/cookies\";\r\n\r\nconst initialState = {\r\n  user: {\r\n    favouriteMovies: [],\r\n    watchList: [],\r\n  },\r\n  isAuth: false,\r\n  session_id: cookies.get(\"session_id\") || null,\r\n};\r\n\r\nexport const authReducer = handleActions(\r\n  {\r\n    UPDATE_AUTH: (state) => {\r\n      return { ...state };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import Cookies from \"universal-cookie\";\r\n\r\nexport const cookies = new Cookies();\r\n","import { handleActions } from \"redux-actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const errorsReducer = handleActions({}, initialState);\r\n","import { createAction } from \"redux-actions\";\r\nimport * as types from \"./filters.types\";\r\n\r\nexport const onChangeFilters = createAction(\r\n  types.ON_CHANGE_FILTERS,\r\n  ({ name, value }) => ({\r\n    name,\r\n    value,\r\n  })\r\n);\r\n\r\nexport const resetFilters = createAction(types.RESET_FILTERS);\r\n","export const ON_CHANGE_FILTERS = \"ON_CHANGE_FILTERS\";\r\nexport const RESET_FILTERS = \"RESET_FILTERS\";\r\n","import { handleActions } from \"redux-actions\";\r\n\r\nimport { ON_CHANGE_FILTERS, RESET_FILTERS } from \"./filters.types\";\r\n\r\nconst initialState = {\r\n  sort_by: \"popularity.desc\",\r\n  primary_release_year: `${new Date().getFullYear()}`,\r\n  with_genres: [],\r\n  page: 1,\r\n  total_pages: 500,\r\n  language: \"ru-RU\",\r\n};\r\n\r\nexport const filtersReducer = handleActions(\r\n  {\r\n    ON_CHANGE_FILTERS: (store, { payload }) => {\r\n      return {\r\n        ...store,\r\n        [payload.name]: payload.value,\r\n      };\r\n    },\r\n    RESET_FILTERS: (store) => (store = initialState),\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { authReducer } from \"./auth\";\r\nimport { errorsReducer } from \"./errors\";\r\nimport { filtersReducer } from \"./filters\";\r\n\r\nconst reducers = {\r\n  auth: authReducer,\r\n  filters: filtersReducer,\r\n  errors: errorsReducer,\r\n  form: formReducer,\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Обязательное поле\";\r\n};\r\n\r\nexport const minLength = (value) => {\r\n  if (value.length > 5) return undefined;\r\n\r\n  return \"Должно быть минимум 5 значений, или больше\";\r\n};\r\n\r\nexport const indentPassword = (value, formState) => {\r\n  if (formState.repeatPassword === formState.password) return undefined;\r\n\r\n  return \"Пароли не идентичны\";\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CustomField = (props) => {\r\n  const { input, label, type, meta } = props;\r\n\r\n  return (\r\n    <div className=\"form-group mb-3\">\r\n      <label className=\"mb-1\" htmlFor={label}>\r\n        {label} *\r\n      </label>\r\n      <input\r\n        {...input}\r\n        id={label}\r\n        placeholder={label}\r\n        type={type}\r\n        className=\"form-control\"\r\n      />\r\n      {meta.touched &&\r\n        ((meta.error && <p className=\"invalid-field\">{meta.error}</p>) ||\r\n          (meta.warning && <p className=\"invalid-field\">{meta.warning}</p>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, minLength, indentPassword } from \"../../utils/validate\";\r\nimport { CustomField } from \"../../elements/CustomField\";\r\n\r\nfunction AuthorizationForm(props) {\r\n  const { handleSubmit } = props;\r\n\r\n  const onSubmit = () => {};\r\n\r\n  return (\r\n    <>\r\n      <p className=\"authorization-form-title\">Авторизация</p>\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"authorization-form\">\r\n        <Field\r\n          name=\"login\"\r\n          component={CustomField}\r\n          label=\"Логин\"\r\n          validate={[required, minLength]}\r\n        />\r\n        <Field\r\n          name=\"password\"\r\n          type=\"password\"\r\n          component={CustomField}\r\n          label=\"Пароль\"\r\n          validate={[required, minLength]}\r\n        />\r\n        <Field\r\n          name=\"repeatPassword\"\r\n          type=\"password\"\r\n          component={CustomField}\r\n          label=\"Повторите пароль\"\r\n          validate={[required, minLength, indentPassword]}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-success w-100 mt-2 mb-3\">\r\n          Отправить\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nAuthorizationForm = reduxForm({\r\n  form: \"AuthorizationForm\",\r\n})(AuthorizationForm);\r\n\r\nexport { AuthorizationForm };\r\n","import React from \"react\";\r\nimport { Modal, ModalBody } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AuthorizationForm } from \"./AuthorizationForm\";\r\n\r\nexport const AuthorizationModal = (props) => {\r\n  const { modal, toggle } = props;\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle} className=\"authorization-form-modal\">\r\n      <ModalBody>\r\n        <AuthorizationForm />\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nAuthorizationModal.defaultProps = {\r\n  modal: false,\r\n};\r\n\r\nAuthorizationModal.propTypes = {\r\n  modal: PropTypes.bool.isRequired,\r\n  toggle: PropTypes.func.isRequired,\r\n};\r\n","export const theme = {\r\n  colorDark: \"#24242c\",\r\n  colorWhite: \"#f5f5f5\",\r\n  colorGreen: \"#3e903ee0\",\r\n  colorOrange: \"#daa520\",\r\n  colorRed: \"#942f2fdb\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { theme } from \"../../theme\";\r\n\r\nexport const AuthButton = styled.button`\r\n  cursor: pointer;\r\n  color: ${theme.colorOrange};\r\n  border: 1px solid ${theme.colorOrange};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  background: transparent;\r\n  padding: 0.3rem 0.75rem;\r\n  margin-right: ${(props) => props.right && \"5px\"};\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background: ${theme.colorOrange};\r\n    color: ${theme.colorDark};\r\n  }\r\n`;\r\n\r\nexport const AuthButtonLink = styled.a`\r\n  color: inherit;\r\n\r\n  &:hover {\r\n    color: inherit;\r\n  }\r\n`;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { AuthorizationModal } from \"./AuthorizationModal\";\r\nimport { AuthButton, AuthButtonLink } from \"./Authorization.style\";\r\n\r\nexport const Authorization = () => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <AuthButton right onClick={toggle}>\r\n          Войти\r\n        </AuthButton>\r\n        <AuthorizationModal modal={modal} toggle={toggle} />\r\n      </Fragment>\r\n      <AuthButton>\r\n        <AuthButtonLink\r\n          href=\"https://www.themoviedb.org/signup\"\r\n          rel=\"nofollow\"\r\n          target=\"blank\"\r\n        >\r\n          Регистрация\r\n        </AuthButtonLink>\r\n      </AuthButton>\r\n    </Fragment>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { theme } from \"../../theme\";\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  top: 0px;\r\n  z-index: 999;\r\n  position: sticky;\r\n  width: 100%;\r\n  color: ${theme.colorWhite};\r\n  height: 70px;\r\n  background: ${theme.colorDark};\r\n\r\n  @media (max-width: 650px) {\r\n    height: 110px;\r\n  }\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 1140px;\r\n  padding: 0px 30px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 650px) {\r\n    flex-direction: column-reverse;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const HeaderTitleContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 380px;\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  @media (max-width: 650px) {\r\n    justify-content: center;\r\n    padding-top: 8px;\r\n  }\r\n`;\r\n\r\nexport const HeaderTitle = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  letter-spacing: 0.5px;\r\n  margin: 0px;\r\n`;\r\n\r\nexport const HeaderSubTitle = styled.span`\r\n  color: ${theme.colorOrange};\r\n  padding-left: 1px;\r\n`;\r\n\r\nexport const HeaderWithMovieDbApi = styled.a`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n  margin-left: 8px;\r\n\r\n  @media (max-width: 360px) {\r\n      display: none;\r\n  }\r\n`;\r\n\r\nexport const HeaderAuthorizationWrapper = styled.div`\r\n  width: 200px;\r\n  height: max-content;\r\n  display: flex;\r\n  justify-content: space-space-around;\r\n  align-items: center;\r\n  padding: 5px 7px;\r\n\r\n  @media (max-width: 650px) {\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    padding: 5px 0px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Authorization } from \"../Authorization\";\r\nimport {\r\n  HeaderWrapper,\r\n  HeaderContainer,\r\n  HeaderTitleContainer,\r\n  HeaderTitle,\r\n  HeaderSubTitle,\r\n  HeaderWithMovieDbApi,\r\n  HeaderAuthorizationWrapper,\r\n} from \"./Header.style\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderContainer>\r\n        <HeaderTitleContainer>\r\n          <Link to=\"/\">\r\n            <HeaderTitle>\r\n              Movie<HeaderSubTitle>searcher</HeaderSubTitle>\r\n            </HeaderTitle>\r\n          </Link>\r\n          <HeaderWithMovieDbApi\r\n            href=\"https://www.themoviedb.org/\"\r\n            rel=\"nofollow\"\r\n            target=\"blank\"\r\n          >\r\n            with TMDB Api\r\n          </HeaderWithMovieDbApi>\r\n        </HeaderTitleContainer>\r\n        <HeaderAuthorizationWrapper>\r\n          <Authorization />\r\n        </HeaderAuthorizationWrapper>\r\n      </HeaderContainer>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { onChangeFilters } from \"../../redux\";\r\n\r\nconst sortByOptions = [\r\n  {\r\n    label: \"Популярные (убывание)\",\r\n    value: \"popularity.desc\",\r\n  },\r\n  {\r\n    label: \"Популярные (возростание)\",\r\n    value: \"popularity.asc\",\r\n  },\r\n  {\r\n    label: \"Рейтинг (убывание)\",\r\n    value: \"vote_average.desc\",\r\n  },\r\n  {\r\n    label: \"Рейтинг (возростание)\",\r\n    value: \"vote_average.asc\",\r\n  },\r\n];\r\n\r\nexport const Sort = () => {\r\n  const filters = useSelector((store) => store.filters);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch(onChangeFilters({ name, value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sort form-group\">\r\n      <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n        Сортировать\r\n      </label>\r\n      <select\r\n        className=\"form-control cursor-pointer\"\r\n        name=\"sort_by\"\r\n        id=\"sort_by\"\r\n        onChange={handleChange}\r\n        value={filters.sort_by}\r\n      >\r\n        {sortByOptions.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onChangeFilters } from \"../../redux\";\r\n\r\nexport const Pagination = () => {\r\n  const filters = useSelector((store) => store.filters);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (page) => () => {\r\n    dispatch(onChangeFilters({ name: \"page\", value: page }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination form-group col-12 d-flex justify-content-center p-0\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-light col-4\"\r\n        onClick={handleChange(+filters.page - 1)}\r\n        disabled={filters.page === 1}\r\n      >\r\n        Назад\r\n      </button>\r\n      <div className=\"col-4 total-pages d-flex align-items-center justify-content-center p-0\">{`${filters.page} из ${filters.total_pages}`}</div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-light col-4\"\r\n        onClick={handleChange(+filters.page + 1)}\r\n        disabled={Number(filters.page === filters.total_pages) || false}\r\n      >\r\n        Вперед\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onChangeFilters } from \"../../redux\";\r\n\r\nconst getYears = () => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return Array.from(new Array(70), (value, index) => currentYear + 2 - index);\r\n};\r\n\r\nconst years = getYears();\r\n\r\nexport const ReleaseYear = () => {\r\n  const filters = useSelector((store) => store.filters);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    dispatch(onChangeFilters({ name, value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"filters-second-label\" htmlFor=\"primary_release_year\">\r\n        Дата выхода\r\n      </label>\r\n      <select\r\n        className=\"form-control\"\r\n        name=\"primary_release_year\"\r\n        id=\"primary_release_year\"\r\n        value={filters.primary_release_year}\r\n        onChange={handleChange}\r\n      >\r\n        {years.map((year) => (\r\n          <option key={year} value={year}>\r\n            {year}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\nexport const API_YOUTUBE_EMBED_URL = \"https://www.youtube.com/embed/\";\r\nexport const API_YOUTUBE_URL = \"https://www.youtube.com/iframe_api\";\r\nexport const API_YOUTUBE_HOST_URL = \"https://www.youtube.com\";\r\nexport const API_IMG_URL = \"https://image.tmdb.org/t/p/w500\";\r\nexport const API_IMG_URL_W1920 =\r\n  \"https://image.tmdb.org/t/p/w1920_and_h800_multi_faces\";\r\nexport const API_KEY_MOVIE_DB_V3 = \"2bf9f43ff01f800a4b2838b95fcce99e\";\r\nexport const API_KEY_MOVIE_DB_V4 =\r\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYmY5ZjQzZmYwMWY4MDBhNGIyODM4Yjk1ZmNjZTk5ZSIsInN1YiI6IjVjZTkyOWU3YzNhMzY4MWM0ZTFlODRkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fffZy6W_ZCD20rApqm9asph-hWYo_w8zjvPNLyZf-wY\";\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const GenresItem = (props) => {\r\n  const { genre, handleChange } = props;\r\n  const filters = useSelector((store) => store.filters);\r\n\r\n  return (\r\n    <div className=\"genres__item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        value={genre.id}\r\n        checked={\r\n          filters.with_genres.indexOf(String(genre.id)) === -1 ? false : true\r\n        }\r\n        className=\"checkbox\"\r\n        name=\"with_genres\"\r\n        id={genre.id}\r\n        onChange={handleChange}\r\n      />\r\n      <label className=\"label\" htmlFor={genre.id}>\r\n        {genre.name}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { API_URL, API_KEY_MOVIE_DB_V3 } from \"../../utils/apies\";\r\nimport { GenresItem } from \"./GenresItem\";\r\nimport { onChangeFilters } from \"../../redux\";\r\n\r\nexport const GenresList = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const filters = useSelector((store) => store.filters);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${API_URL}/genre/movie/list?api_key=${API_KEY_MOVIE_DB_V3}&language=${filters.language}`\r\n      )\r\n      .then(({ data }) => setGenres(data.genres))\r\n      .catch((error) => console.log(error));\r\n  }, [filters.language]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    const updateGenres =\r\n      filters.with_genres.indexOf(String(value)) === -1\r\n        ? [...filters.with_genres, value]\r\n        : filters.with_genres.filter((genre) => genre !== value);\r\n\r\n    dispatch(onChangeFilters({ name, value: updateGenres }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <label className=\"filters-second-label mt-3\" htmlFor=\"with_genres\">\r\n        Жанры\r\n      </label>\r\n      <div className=\"genres\" id=\"with_genres\">\r\n        {genres.map((genre) => (\r\n          <GenresItem\r\n            genre={genre}\r\n            key={genre.id}\r\n            handleChange={handleChange}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetFilters } from \"../../redux\";\r\n\r\nexport const ResetFilters = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handelResetFilters = () => {\r\n    dispatch(resetFilters());\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-light col-12 mt-3 reset-filters\"\r\n      onClick={handelResetFilters}\r\n    >\r\n      Сбросить фильтры\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sort } from \"../Sort\";\r\nimport { Pagination } from \"../Pagination\";\r\nimport { ReleaseYear } from \"../ReleaseYear\";\r\nimport { GenresList } from \"../Genres\";\r\nimport { ResetFilters } from \"../ResetFilters\";\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n};\r\n\r\nexport const Filters = () => {\r\n  return (\r\n    <div className=\"filters\">\r\n      <form onSubmit={handleSubmit}>\r\n        <Sort />\r\n        <Pagination />\r\n        <div className=\"sort form-group mt-4\">\r\n          <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n            Фильтровать\r\n          </label>\r\n          <ReleaseYear />\r\n          <GenresList />\r\n          <ResetFilters />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","export const convertReleaseDate = (releaseDate = \"2021-02-05\") => {\r\n  let date = new Date(releaseDate);\r\n  date.setDate(date.getDate());\r\n\r\n  return String(date);\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API_IMG_URL } from \"../../utils/apies\";\r\nimport { convertReleaseDate } from \"../../utils/helpers\";\r\nimport { defaultPoster } from \"../../img\";\r\n\r\nexport const MovieItem = (props) => {\r\n  const { movie } = props;\r\n\r\n  return (\r\n    <div className=\"movie-item ml-1 mr-1\">\r\n      <div className=\"poster-image\">\r\n        <Link to={`/movie/${movie.id}`}>\r\n          <img\r\n            className=\"image\"\r\n            src={\r\n              movie.poster_path\r\n                ? `${API_IMG_URL}${movie.poster_path}`\r\n                : defaultPoster\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"desc\">\r\n        <p className=\"vote-avarage\">\r\n          {String(movie.vote_average).substr(0, 3)}\r\n        </p>\r\n        <p className=\"title\">\r\n          <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\r\n        </p>\r\n        <p className=\"release-date\">\r\n          {convertReleaseDate(movie.release_date).substr(4, 11)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieItem.defaultProps = {\r\n  movie: {},\r\n};\r\n\r\nMovieItem.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 200px;\r\n`;\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { LoaderWrapper } from \"./Loader.style\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <Spinner color=\"dark\" />\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport { API_URL, API_KEY_MOVIE_DB_V3 } from \"../../utils/apies\";\r\nimport { MovieItem } from \"./MovieItem\";\r\nimport { Loader } from \"../../elements/Loader\";\r\n\r\nconst getMoviesParams = (params) => ({\r\n  api_key: API_KEY_MOVIE_DB_V3,\r\n  language: params.language,\r\n  sort_by: params.sort_by,\r\n  primary_release_year: params.primary_release_year,\r\n  with_genres: params.with_genres,\r\n  page: params.page,\r\n});\r\n\r\nexport const MoviesList = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const filters = useSelector((store) => store.filters);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${API_URL}/discover/movie?${queryString.stringify(\r\n          getMoviesParams(filters)\r\n        )}`\r\n      )\r\n      .then(({ data }) => {\r\n        setMovies(data.results);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [\r\n    filters.language,\r\n    filters.page,\r\n    filters.primary_release_year,\r\n    filters.sort_by,\r\n    filters.with_genres,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"movies-container d-flex flex-wrap justify-content-center align-items-center\">\r\n      {movies.length ? (\r\n        movies.map((movie) => <MovieItem movie={movie} key={movie.id} />)\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Filters } from \"../../components/Filters\";\r\nimport { MoviesList } from \"../../components/Movies\";\r\n\r\nexport const MoviesPage = () => {\r\n  return (\r\n    <div className=\"container d-flex mt-5 p-0 flex-md-row flex-column\">\r\n      <div className=\"col-12 col-md-4 col-lg-3 mb-4 mb-md-0 p-0\">\r\n        <Filters />\r\n      </div>\r\n      <div className=\"col-12 col-md-8 col-lg-9 p-1\">\r\n        <MoviesList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { theme } from \"../../theme\";\r\nimport { addBorderForVoteAvarage } from \"../../utils/helpers\";\r\n\r\nexport const MovieHeader = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n  color: ${theme.colorWhite};\r\n`;\r\n\r\nexport const MovieHeaderBackground = styled.div`\r\n  position: relative;\r\n  background-image: linear-gradient(\r\n    90deg,\r\n    ${theme.colorDark} 20%,\r\n    rgba(48, 65, 78, 0.64)\r\n  );\r\n  text-align: right;\r\n`;\r\n\r\nexport const MovieHeaderBackgroundImage = styled.img`\r\n  position: relative;\r\n  object-fit: cover;\r\n  width: 80%;\r\n  height: 512px;\r\n  z-index: -2;\r\n\r\n  @media (max-width: 830px) {\r\n    height: 1024px;\r\n  }\r\n`;\r\n\r\nexport const MovieHeaderSingleBlock = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n`;\r\n\r\nexport const MovieHeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 512px;\r\n  max-width: 1140px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const MovieHeaderPoster = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 380px;\r\n  height: 512px;\r\n\r\n  @media (max-width: 830px) {\r\n    width: 100%;\r\n    height: 470px;\r\n    justify-content: flex-start;\r\n    padding: 0px 30px;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    padding: 0px 20px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const MovieHeaderPosterImage = styled.img`\r\n  width: 290px;\r\n  height: 435px;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: 350px) {\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const MovieHeaderDescription = styled.div`\r\n  width: calc(100% - 380px);\r\n  max-width: 760px;\r\n  min-width: 450px;\r\n  height: 512px;\r\n  padding: 32px 10px;\r\n\r\n  @media (max-width: 830px) {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding: 0px 30px;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    min-width: auto;\r\n    padding: 0px 20px;\r\n  }\r\n`;\r\n\r\nexport const MovieHeaderTitle = styled.h2`\r\n  margin: 0px;\r\n  font-size: 30px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport const MovieHeaderTagLine = styled.p`\r\n  font-size: 1em;\r\n  font-weight: 400;\r\n  font-style: italic;\r\n  opacity: 0.7;\r\n  margin: 0px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const MovieHeaderVoteAvarageContainer = styled.div`\r\n  display: flex;\r\n  margin: 16px 0px;\r\n`;\r\n\r\nexport const MovieHeaderVoteAvarage = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 37px;\r\n  height: 36px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  border: 3px inset\r\n    ${({ vote_avarage }) => addBorderForVoteAvarage(vote_avarage)};\r\n  border-radius: 50%;\r\n  margin: 0px;\r\n`;\r\n\r\nexport const MovieHeaderVoteAvarageText = styled.p`\r\n  margin: 0px;\r\n  padding-left: 11px;\r\n  line-height: 18px;\r\n`;\r\n\r\nexport const MovieHeaderParagraph = styled.p`\r\n  margin-bottom: 0.5px;\r\n`;\r\n\r\nexport const MovieHeaderBoldTest = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const MovieHeaderOverviewTitle = styled.h4`\r\n  margin-top: 18px;\r\n  margin-bottom: 2px;\r\n  font-size: 23px;\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 20px;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const MovieHeaderOverview = styled.div`\r\n  width: 97%;\r\n  padding-right: 5px;\r\n  margin-bottom: 0px;\r\n  max-height: ${({ tagline }) => (tagline ? \"100px\" : \"150px\")};\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n\r\n  @media (max-width: 830px) {\r\n    width: 100%;\r\n    padding-right: 0px;\r\n    max-height: fit-content;\r\n    overflow-y: hidden;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    max-height: ${({ tagline }) => (tagline ? \"100px\" : \"150px\")};\r\n    overflow-y: auto;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n","import { theme } from \"../../theme\";\r\n\r\nexport const addBorderForVoteAvarage = (voteAvarage = 0) => {\r\n  if (voteAvarage >= 7) {\r\n    return theme.colorGreen;\r\n  }\r\n  if (voteAvarage >= 4 && voteAvarage < 7) {\r\n    return theme.colorOrange;\r\n  }\r\n  if (voteAvarage < 4) {\r\n    return theme.colorRed;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { API_IMG_URL, API_IMG_URL_W1920 } from \"../../utils/apies\";\r\nimport { convertReleaseDate } from \"../../utils/helpers\";\r\nimport defaultBackdropImage from \"../../img/not-found-backdrop.jpg\";\r\nimport defaultPosterImage from \"../../img/not-found-poster.jpg\";\r\nimport {\r\n  MovieHeader,\r\n  MovieHeaderBackground,\r\n  MovieHeaderBackgroundImage,\r\n  MovieHeaderSingleBlock,\r\n  MovieHeaderContainer,\r\n  MovieHeaderPoster,\r\n  MovieHeaderPosterImage,\r\n  MovieHeaderDescription,\r\n  MovieHeaderTitle,\r\n  MovieHeaderTagLine,\r\n  MovieHeaderVoteAvarageContainer,\r\n  MovieHeaderVoteAvarage,\r\n  MovieHeaderVoteAvarageText,\r\n  MovieHeaderParagraph,\r\n  MovieHeaderBoldTest,\r\n  MovieHeaderOverviewTitle,\r\n  MovieHeaderOverview,\r\n} from \"./MoviePageHeader.style\";\r\n\r\nconst getValueFromArray = (arr = []) => {\r\n  let resultArr = [];\r\n\r\n  arr.forEach((item) => {\r\n    resultArr.push(item.name);\r\n  });\r\n\r\n  return resultArr;\r\n};\r\n\r\nconst getBackgropImage = (movie) => {\r\n  if (!movie.backdrop_path) {\r\n    return defaultBackdropImage;\r\n  }\r\n\r\n  const path = movie.belongs_to_collection\r\n    ? movie.belongs_to_collection.backdrop_path\r\n    : movie.backdrop_path;\r\n\r\n  return `${API_IMG_URL_W1920}${path}`;\r\n};\r\n\r\nexport const MoviePageHeader = (props) => {\r\n  const { movie } = props;\r\n\r\n  return (\r\n    <MovieHeader>\r\n      <MovieHeaderBackground>\r\n        <MovieHeaderBackgroundImage src={getBackgropImage(movie)} alt=\"\" />\r\n      </MovieHeaderBackground>\r\n      <MovieHeaderSingleBlock>\r\n        <MovieHeaderContainer>\r\n          <MovieHeaderPoster>\r\n            <MovieHeaderPosterImage\r\n              src={\r\n                movie.poster_path\r\n                  ? `${API_IMG_URL}${movie.poster_path}`\r\n                  : defaultPosterImage\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </MovieHeaderPoster>\r\n          <MovieHeaderDescription>\r\n            <MovieHeaderTitle>{movie.title}</MovieHeaderTitle>\r\n            {movie.tagline && (\r\n              <MovieHeaderTagLine>{movie.tagline}</MovieHeaderTagLine>\r\n            )}\r\n            <MovieHeaderVoteAvarageContainer>\r\n              <MovieHeaderVoteAvarage vote_avarage={movie.vote_average}>\r\n                {String(movie.vote_average).length === 1\r\n                  ? `${movie.vote_average}.0`\r\n                  : movie.vote_average}\r\n              </MovieHeaderVoteAvarage>\r\n              <MovieHeaderVoteAvarageText>\r\n                Пользовательский <br /> счёт\r\n              </MovieHeaderVoteAvarageText>\r\n            </MovieHeaderVoteAvarageContainer>\r\n            <MovieHeaderParagraph>\r\n              <MovieHeaderBoldTest>Статус</MovieHeaderBoldTest> - {movie.status}\r\n            </MovieHeaderParagraph>\r\n            <MovieHeaderParagraph>\r\n              <MovieHeaderBoldTest>Дата выхода</MovieHeaderBoldTest> -{\" \"}\r\n              {convertReleaseDate(movie.release_date).substr(0, 15)}\r\n            </MovieHeaderParagraph>\r\n            <MovieHeaderParagraph>\r\n              <MovieHeaderBoldTest>Жанры</MovieHeaderBoldTest> -{\" \"}\r\n              {getValueFromArray(movie.genres).join(\", \")}\r\n            </MovieHeaderParagraph>\r\n            <MovieHeaderParagraph>\r\n              <MovieHeaderBoldTest>Язык оригинала</MovieHeaderBoldTest> -{\" \"}\r\n              {movie.original_language}\r\n            </MovieHeaderParagraph>\r\n            <MovieHeaderParagraph>\r\n              <MovieHeaderBoldTest>Компания</MovieHeaderBoldTest> -{\" \"}\r\n              {getValueFromArray(movie.production_companies).join(\", \")}\r\n            </MovieHeaderParagraph>\r\n            <MovieHeaderParagraph>\r\n              <MovieHeaderBoldTest>Страна</MovieHeaderBoldTest> -{\" \"}\r\n              {getValueFromArray(movie.production_countries).join(\", \")}\r\n            </MovieHeaderParagraph>\r\n            <MovieHeaderOverviewTitle>Обзор</MovieHeaderOverviewTitle>\r\n            <MovieHeaderOverview tagline={!!movie.tagline}>\r\n              {movie.overview}\r\n            </MovieHeaderOverview>\r\n          </MovieHeaderDescription>\r\n        </MovieHeaderContainer>\r\n      </MovieHeaderSingleBlock>\r\n    </MovieHeader>\r\n  );\r\n};\r\n\r\nMoviePageHeader.defaultProps = {\r\n  movie: {},\r\n};\r\n\r\nMoviePageHeader.propTypes = {\r\n  movie: PropTypes.object.isRequired,\r\n};\r\n","import styled from \"styled-components\";\r\nimport { theme } from \"../../theme\";\r\n\r\nexport const TrailersWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nexport const TrailersContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 1140px;\r\n  margin: 0 auto;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nexport const TrailersTitle = styled.h2`\r\n  width: 100%;\r\n  margin: 15px 0px;\r\n  font-size: 30px;\r\n`;\r\n\r\nexport const FlexWrapper = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: 830px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const CurrentTrailerWrapper = styled.div`\r\n  width: ${(props) =>\r\n    props.trailersLength > 1 ? \"calc(100% - 300px)\" : \"100%\"};\r\n  height: 450px;\r\n\r\n  @media (max-width: 830px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const TrailersList = styled.div`\r\n  width: 300px;\r\n  height: 450px;\r\n  overflow-y: auto;\r\n\r\n  @media (max-width: 830px) {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 200px;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n  }\r\n`;\r\n\r\nexport const IframeListItemWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 200px;\r\n\r\n  @media (max-width: 830px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nexport const IframeListItem = styled.iframe`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media (max-width: 830px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nexport const IrameListItemOverBlock = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport const LoadMore = styled.button`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 43px;\r\n  color: ${theme.colorOrange};\r\n  border: none;\r\n  font-weight: 500;\r\n  background: ${theme.colorDark};\r\n  letter-spacing: 1px;\r\n\r\n  @media (max-width: 830px) {\r\n    height: 200px;\r\n    padding: 0px 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PlayerContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { API_YOUTUBE_URL, API_YOUTUBE_HOST_URL } from \"../../utils/apies\";\r\nimport { Loader } from \"../../elements/Loader\";\r\nimport { PlayerContainer, LoaderWrapper } from \"./Player.style\";\r\n\r\nexport const Player = (props) => {\r\n  const [readyTrailer, setReadyTrailer] = useState(false);\r\n  const { id, autoplay = 0 } = props;\r\n  let player;\r\n\r\n  useEffect(() => {\r\n    if (!window.YT) {\r\n      const tag = document.createElement(\"script\");\r\n      tag.src = API_YOUTUBE_URL;\r\n\r\n      window.onYouTubeIframeAPIReady = loadVideo;\r\n\r\n      const firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    } else {\r\n      loadVideo();\r\n    }\r\n  }, [id]);\r\n\r\n  const loadVideo = () => {\r\n    player = new window.YT.Player(`player-${id}`, {\r\n      videoId: id,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      host: API_YOUTUBE_HOST_URL,\r\n      playerVars: {\r\n        origin: document.location.origin,\r\n        iv_load_policy: 3,\r\n        // autoplay,\r\n        enablejsapi: 1,\r\n        loop: 1,\r\n        playlist: id,\r\n        modestbranding: 1,\r\n        showinfo: 0,\r\n        rel: 0,\r\n      },\r\n      events: {\r\n        onReady: onPlayerReady,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onPlayerReady = (e) => {\r\n    setReadyTrailer(true);\r\n  };\r\n\r\n  return (\r\n    <PlayerContainer>\r\n      <div id={`player-${id}`} />\r\n      {!readyTrailer && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n    </PlayerContainer>\r\n  );\r\n};\r\n\r\nPlayer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport {\r\n  API_URL,\r\n  API_YOUTUBE_EMBED_URL,\r\n  API_KEY_MOVIE_DB_V3,\r\n} from \"../../utils/apies\";\r\nimport {\r\n  TrailersWrapper,\r\n  TrailersContainer,\r\n  TrailersTitle,\r\n  FlexWrapper,\r\n  CurrentTrailerWrapper,\r\n  TrailersList,\r\n  IframeListItemWrapper,\r\n  IframeListItem,\r\n  IrameListItemOverBlock,\r\n  LoadMore,\r\n} from \"./MoviePageTrailers.style\";\r\nimport { Player } from \"./Player\";\r\n\r\nexport const MoviePageTrailers = ({ movie_id }) => {\r\n  const [trailers, setTrailers] = useState([]);\r\n  const [activeTrailer, setActiveTrailer] = useState(0);\r\n  const [availableTrailers, setavailableTrailers] = useState(4);\r\n  const filters = useSelector((store) => store.filters);\r\n\r\n  useEffect(() => {\r\n    if (movie_id)\r\n      axios\r\n        .all([\r\n          axios.get(\r\n            `${API_URL}/movie/${movie_id}/videos?api_key=${API_KEY_MOVIE_DB_V3}&language=${filters.language}`\r\n          ),\r\n          axios.get(\r\n            `${API_URL}/movie/${movie_id}/videos?api_key=${API_KEY_MOVIE_DB_V3}&language=en-EN`\r\n          ),\r\n        ])\r\n        .then((data) => {\r\n          setTrailers([...data[0].data.results, ...data[1].data.results]);\r\n        })\r\n        .catch((error) => {\r\n          console.warn(error);\r\n        });\r\n  }, [movie_id]);\r\n\r\n  const changeActiveTrailer = (key) => () => {\r\n    setActiveTrailer(key);\r\n  };\r\n\r\n  const changeAvailableTrailers = () => {\r\n    setavailableTrailers(trailers.length);\r\n  };\r\n\r\n  const currentTrailer = trailers.map((trailer, index) => {\r\n    return (\r\n      <Fragment key={trailer.key}>\r\n        {index === activeTrailer && (\r\n          <Fragment>\r\n            <Player id={trailer.key} autoplay={1} />\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  const trailersList = trailers.map((trailer, index) => {\r\n    return (\r\n      <Fragment key={trailer.key}>\r\n        {index !== activeTrailer && index < availableTrailers && (\r\n          <IframeListItemWrapper>\r\n            <IframeListItem\r\n              src={`${API_YOUTUBE_EMBED_URL}${trailer.key}`}\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            ></IframeListItem>\r\n            <IrameListItemOverBlock\r\n              onClick={changeActiveTrailer(index)}\r\n            ></IrameListItemOverBlock>\r\n          </IframeListItemWrapper>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      {trailers.length > 0 && (\r\n        <TrailersWrapper>\r\n          <TrailersContainer>\r\n            <TrailersTitle>Trailers</TrailersTitle>\r\n            <FlexWrapper>\r\n              <CurrentTrailerWrapper trailersLength={trailers.length}>\r\n                {currentTrailer}\r\n              </CurrentTrailerWrapper>\r\n              {trailers.length > 1 && (\r\n                <TrailersList>\r\n                  {trailersList}\r\n                  {trailers.length > availableTrailers && (\r\n                    <LoadMore onClick={changeAvailableTrailers}>\r\n                      load more\r\n                    </LoadMore>\r\n                  )}\r\n                </TrailersList>\r\n              )}\r\n            </FlexWrapper>\r\n          </TrailersContainer>\r\n        </TrailersWrapper>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMoviePageTrailers.propTypes = {\r\n  movie_id: PropTypes.number,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport queryString from \"query-string\";\r\nimport axios from \"axios\";\r\nimport { API_URL, API_KEY_MOVIE_DB_V3 } from \"../../utils/apies\";\r\nimport { MoviePageHeader } from \"./MoviePageHeader\";\r\nimport { MoviePageTrailers } from \"./MoviePageTrailers\";\r\n\r\nconst getMovieParams = (params) => ({\r\n  language: params.language,\r\n  api_key: API_KEY_MOVIE_DB_V3,\r\n});\r\n\r\nexport const MoviePage = (props) => {\r\n  const [movie, setMovie] = useState({});\r\n  const filters = useSelector((store) => store.filters);\r\n\r\n  const { id } = props.match.params;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${API_URL}/movie/${id}?${queryString.stringify(\r\n          getMovieParams(filters)\r\n        )}`\r\n      )\r\n      .then(({ data }) => {\r\n        setMovie(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MoviePageHeader movie={movie} />\r\n      <MoviePageTrailers movie_id={movie.id} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { MoviesPage } from \"./pages/MoviesPage\";\nimport { MoviePage } from \"./pages/MoviePage\";\n\nexport const App = () => {\n  return (\n    <BrowserRouter basename=\"/moviesearcher/\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={MoviesPage} />\n        <Route exact path=\"/movie/:id\" component={MoviePage} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { App } from \"./App.jsx\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/not-found-poster.491cf8e5.jpg\";"],"sourceRoot":""}